---
- hosts: all
  remote_user: root
  become: true
  gather_facts: false

  vars:
    ansible_connection: paramiko
    ansible_python_interpreter: /usr/local/bin/python3

  tasks:
    - name: install python
      raw: ASSUME_ALWAYS_YES=yes pkg install python3
      args:
        executable: /bin/sh

    - setup:

    - name: install packages
      pkgng:
        name:
          - ca_root_nss
          - duff
          - fish
          - openmdns
          - pkg-rmleaf
          - rsync
          - sudo
          - tmux
          - vim-console

    - name: configure openmdns
      command: "sysrc mdnsd_flags=\"{{ ansible_interfaces | difference(['lo0']) | join(' ') }}\""
      changed_when: false

    - name: start openmdns
      service:
        name: mdnsd
        enabled: true
        state: started

    - name: give sudo to wheel group
      lineinfile:
        path: /usr/local/etc/sudoers
        line: "%wheel ALL=(ALL) NOPASSWD: ALL"
        validate: "visudo -cf %s"

    - name: create a user
      user:
        name: "{{ username | default(lookup('env', 'USER')) }}"
        comment: "{{ full_name | default('Anonymous Coward') }}"
        groups: wheel
        shell: "{{ shell | default('/bin/sh') }}"
        state: present
        generate_ssh_key: "{{ key_name is undefined }}"
      register: user

    - name: make .ssh directory
      file:
        path: "{{ user.home }}/.ssh"
        state: directory
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: "700"

    - name: copy up local ssh key
      copy:
        src: "{{ lookup('env', 'HOME') }}/.ssh/{{ item.name }}"
        dest: "{{ user.home }}/.ssh"
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: "{{ item.mode }}"
      loop:
        - name: "{{ key_name }}"
          mode: "600"
        - name: "{{ key_name }}.pub"
          mode: "644"
      when: key_name is defined

    - name: populate authorized_keys
      authorized_key:
        user: "{{ user.name }}"
        key: "https://github.com/{{ github_user }}.keys"
        state: present
      when: github_user is defined

    - name: tighten up SSH access
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^#?{{ item }}\\s"
        line: "{{ item }} no"
        validate: "/usr/sbin/sshd -T -f %s"
      loop:
        - ChallengeResponseAuthentication
        - PasswordAuthentication
        - PermitRootLogin
      notify:
        - reload sshd config

  handlers:
    - name: reload sshd config
      service:
        name: sshd
        state: reloaded
